# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Angular CI

on:
  push:
  pull_request:
    branches: [ "main" ]

defaults:
  run:
    working-directory: ./dhbw-study-smart-frontend

jobs:
  # Setup Node.js and dependencies for follow up jobs
  setup:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js version ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './dhbw-study-smart-frontend/package-lock.json'
    - run: npm ci
    - name: Cache Dependencies
      uses: actions/cache@v4
      with:
        path: ./dhbw-study-smart-frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Restore Cache
      uses: actions/cache@v4
      with:
        path: ./dhbw-study-smart-frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    - run: npm run lint

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Restore Cache
      uses: actions/cache@v4
      with:
        path: ./dhbw-study-smart-frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    - run: npm run build --if-present

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Restore Cache
      uses: actions/cache@v4
      with:
        path: ./dhbw-study-smart-frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
    - run: npm test
